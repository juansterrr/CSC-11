;====================
;Attached : HW 3abcde
;====================

;Program: HW_3a
:Class: CIS - 11
;Programmer: Juan Lopez

;====================

; This program displays the arrays components through registers

INCLUDE Irvine32.inc

SUN = 0
MON = 1 
TUE = 2
WED = 3
THUR = 4
FRI = 5
SAT = 6

.data

days byte 0,1,2,3,4,5,6
.code

main PROC

movzx edx, days[1]
movzx ecx, days[2]
movzx ebx, days[3]
movzx eax, days[4]


call DumpRegs
	exit
main ENDP
END main

;====================
;Attached : HW 3abcde
;====================

;Program: HW_3b
;Class: CIS - 11
;Programmer: Juan Lopez

;====================

; This program calculates the area of a rectangle

INCLUDE Irvine32.inc



.data
num2 DWORD ?
tot DWORD ?
msg1 BYTE "This program calculates the area of a rectangle.",0 
entWid BYTE "Enter the Width of the rectangle: ",0
entLen BYTE "Now enter the Length of the rectangle: ",0
totmsg BYTE "The Area of the rectangle is: ", 0

.code

main PROC

mov edx, offset msg1 
call WriteString 
call crlf

call crlf
mov edx, offset entWid
call WriteString 
call readint

mov tot, eax
mov ebx, tot

call crlf
mov edx, offset entLen
call WriteString 
call readint

mov num2, eax

mul tot

call crlf
mov edx, offset totmsg
call WriteString 
call WriteDec
call crlf 




	exit
main ENDP
END main


;====================
;Attached : HW 3abcde
;====================

;Program: HW_3c
;Class: CIS - 11
;Programmer: Juan Lopez

;====================

; This program displays the list of numbers in an array 

INCLUDE Irvine32.inc



.data

numbers DWORD 3 DUP(1,2,3)
.code

main PROC
;------------------------
mov esi, numbers 
mov eax, esi 
call WriteDec
call crlf 
;------------------------
add esi, 1
mov eax, esi
call WriteDec
call crlf 
;------------------------
add esi, 1
mov eax, esi
call WriteDec
call crlf 

	exit
main ENDP
END main

;====================
;Attached : HW 3abcde
;====================

;Program: HW_3d
;Class: CIS - 11
;Programmer: Juan Lopez

;====================

; This program adds to values togehter 

INCLUDE Irvine32.inc



.data
num1 DWORD 2
num2 DWORD 2
addz DWORD ?
diff DWORD ?
msgsum BYTE "The sum of the 2 values is: ", 0
msgsub BYTE "The difference of the 2 values is: ", 0
.code

main PROC
;---------------------------
inc num1
dec num2

mov eax, num1
;---------------------------
add eax, num2
mov addz, eax
mov edx, offset msgsum 
call WriteString
call WriteDec
dec eax
;----------------------------
call crlf
sub eax, num2
mov diff, eax
mov edx, offset msgsum 
call WriteString
call WriteDec

	exit

main ENDP
END main
