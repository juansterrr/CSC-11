;====================
;Attached : HW 6ab
;====================

;Program: HW_6b 
;Class: CIS - 11
;Programmer: Juan Lopez

;====================

; This program uses user number and sums up the values given 

INCLUDE Irvine32.inc



.data
msg1 BYTE 0ah,0dh, "The Sum of Integers is:",0
numbers dword 20 dup('$')
msg2 BYTE 0ah,0dh,"Enter a signed integer: ",0
msg3 BYTE 0ah,0dh," $"
msg4 BYTE 0ah,0dh,"How many integers will be added? ",0
limit DWORD 0
sum DWORD 0

.code
main PROC
  
;-------procedures for program--------------
call GetIntegerCount
call PromptForIntegers
call CalcSum
call DisplaySum
;--------starting a new line---------------- 

call crlf          
call exitprocess
;----------first procedure call to accept user input-------------
GetIntegerCount proc near
mov esi,0
mov edx,offset msg4       ; Load the effective address of the variable msg1 in data segment to edx
   call writestring       ; print the string in msg2
call readInt
mov ecx,eax
mov limit,ecx
ret

GetIntegerCount endp


PromptForIntegers proc near


x1:
  
mov edx,offset msg2       ; Load the effective address of the variable msg1 in data segment to edx
   call writestring       ; print the string in msg2
call readInt ; Reading number
mov numbers[esi],eax ; Storing number in array
add esi,4 ; Points to next location
dec ecx ; Reducing count
cmp ecx,0 ; If not finished
jne x1 ; If count not reached to zero loop will repeat
ret

PromptForIntegers endp


CalcSum proc near
  
mov edx,offset msg2       ; Load the effective address of the variable msg1 in data segment to edx
   call writestring       ; print the string in msg2
mov esi,0
mov ecx,limit
x2:
mov eax,numbers[esi]
add sum,eax
add esi,4
dec ecx
jnz x2
ret
  
Calcsum endp   


DisplaySum proc near
mov edx,offset msg1       ; Load the effective address of the variable msg1 in data segment to edx
   call writestring       ; print the string in msg2
mov eax,sum   
call writeInt
ret
DisplaySum endp   

  exit 
main ENDP
END main
